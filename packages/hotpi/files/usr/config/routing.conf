#!/bin/bash.real
INTERNETIF=eth0
WLANIF=wlan0
LANIF=eth1

# Wait for hotspot interface.
echo "ROUTING: Waiting upto 30s for network interfaces $INTERNETIF, $LANIF & $WANIF ..."

TIMENOW=`date +%s`
TIMEOUT=$[TIMENOW + 30]

# wait for interfaces
while [ ! -d "/sys/class/net/$INTERNETIF" ] || [ ! -d "/sys/class/net/$LANIF" ] || [ ! -d "/sys/class/net/$WLANIF" ]
do
    sleep 1s

    TIMENOW=`date +%s`
    if [ $TIMENOW -ge $TIMEOUT ]; then 
        break
    fi        
done

if [ ! -d "/sys/class/net/$INTERNETIF" ]; then
    echo "ERROR: Internet interface $INTERNETIF not found!"
fi

if [ ! -d "/sys/class/net/$LANIF" ]; then
    echo "ERROR: Local ethernet interface $LANIF not found!"
fi

if [ ! -d "/sys/class/net/$WLANIF" ]; then
    echo "ERROR: WiFi hotspot interface $WLANIF not found!"
fi

##################### BRIDGE #####################
# Setup bridge
ifconfig $WLANIF up
brctl addbr br0
brctl addif br0 $WLANIF $LANIF
ifconfig br0 192.168.0.1 broadcast 192.168.0.255 netmask 255.255.255.0

###################### IPV4 ######################
# Enable the forwarding of IPv4 packets
echo 1 > /proc/sys/net/ipv4/ip_forward

# IPV4 Flush
iptables -F
iptables -t nat -F
iptables -t mangle -F

# Lock down SSH to local ethernet & wifi
iptables -A INPUT -i $INTERNETIF -p tcp -m tcp --dport 22 -j DROP

# IPV4 Port forwarding
# Example forward port 80 to 192.168.0.10
#
#iptables -A INPUT -i $INTERNETIF -p tcp -m tcp --dport 80 -j ACCEPT
#iptables -t nat -A PREROUTING -i $INTERNETIF -p tcp --dport 80 -j DNAT --to 192.168.0.10:80

# Route existing traffic
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# Drop all other incomming unsolicited internet trafic
iptables -A INPUT -i $INTERNETIF -j DROP

# Enable IP masquerading for internet ethernet port
iptables -t nat -A POSTROUTING -o $INTERNETIF -j MASQUERADE

###################### IPV6 ######################
# IPV6 Flush
ip6tables -F
ip6tables -t nat -F
ip6tables -t mangle -F

# IPV6 Routing - drop everything
ip6tables -A INPUT -i $INTERNETIF -j DROP

###################### DNS ######################
# Setup resolv.conf with name servers
echo "# Generated by routing.service" > /var/cache/resolv.conf
echo "domain home"  >> /var/cache/resolv.conf
echo "search home"  >> /var/cache/resolv.conf
echo "nameserver 127.0.0.1" >> /var/cache/resolv.conf
echo "nameserver 8.8.8.8" >> /var/cache/resolv.conf
echo "nameserver 8.8.4.4" >> /var/cache/resolv.conf


